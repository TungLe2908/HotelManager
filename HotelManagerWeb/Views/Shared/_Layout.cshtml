<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no" />
    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css">
    <title>@ViewBag.Title</title>
</head>
<body ng-app="Hotel" ng-cloak layout="row">
    <style>
        .themebackground {
            background-color: rgba(31,0,77,1);
            color: white;
        }

        .background {
            background: url('../../Image/Wallpaper.jpg') no-repeat center center fixed;
            background-size: cover;
            width: 100%;
            height: 100%;
        }

        .themetext {
            color: rgba(31,0,77,1);
        }

        .full{
            height:100%;
            width:100%;
        }

        .fullheight{
            height:100%;
        }

        .navtra{
            background-color:rgba(1,1,1,0.5) !important;
        }
        .toolbar{
            background-color:#f9f9f9 !important;
        }
        .nav-header{
            color:white;
            text-align:center;
            margin-top:15px;
            height:100%;
        }
        .logo{
            height:100px;
        }
        .transparent{
            background-color:transparent !important;
        }
        .menuitem{
            color:white;
            text-align:center;
            border-top:solid thin;
            border-bottom:solid thin;
            border-color: rgba(255,255,255,0.3) !important;
            margin:30px 10px;
        }
        .menuitem:hover{
            background-color:rgba(255,255,255,0.3) !important;
            cursor:pointer;
        }
        .title{
            color:rgba(31,0,77,1)!important;
            font-size:x-large;
            margin-left:20px;
        }
    </style>
    <div class="full background" ng-controller="MainCtrl" layout="row">
        <md-sidenav layout="column" class="site-sidenav md-sidenav-left md-whiteframe-z2 navtra" md-component-id="left" md-is-locked-open="$mdMedia('gt-md')">
            <header class="nav-header">
                <img src="~/Image/Logo.png" class="logo" />
                    <h2 class="md-heading">Aloraha Hotel</h2>
                
            </header>
            <md-content ng-view md-scroll-y flex layout-padding class="transparent">
                @foreach (var item in ViewBag.MenuItems)
                {
                    <p class="menuitem" ng-click="Navigate('@item.Link')">@item.Text</p>
                }
            </md-content>
        </md-sidenav>

        <div layout="column" class="fullheight" flex>
            <md-toolbar class="md-whiteframe-z2 site-content-toolbar toolbar">
                <p md-toolbar-item class="title">
                    @ViewBag.Title
                </p>
            </md-toolbar>
            <md-content ng-view md-scroll-y flex layout-padding>
                @RenderBody()
            </md-content>
        </div>
        
    </div>

    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-animate.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-aria.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-messages.min.js"></script>

    <!-- Angular Material Library -->
    <script src="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.js"></script>
    <script>
        Date.prototype.addDays = function(days)
        {
            var dat = new Date(this.valueOf());
            dat.setDate(dat.getDate() + days);
            return dat;
        };
        Date.prototype.yyyymmdd = function() {
            var yyyy = this.getFullYear().toString();
            var mm = (this.getMonth()+1).toString(); // getMonth() is zero-based
            var dd  = this.getDate().toString();
            return yyyy + "/" +(mm[1]?mm:"0"+mm[0]) + "/" +(dd[1]?dd:"0"+dd[0]); // padding
        };
        Array.prototype.contains = function(obj) {
            var i = this.length;
            while (i--) {
                if (this[i] === obj) {
                    return true;
                }
            }
            return false;
        }
        var permission = @ViewBag.Permission;
        var token = '@ViewBag.Token';
        var apiurl = "http://localhost:6533/api/";
        var app = angular.module('Hotel', ['ngMaterial']);
        app.directive('focusMe', function($timeout) {
            return {
                scope: { trigger: '=focusMe' },
                link: function(scope, element) {
                    scope.$watch('trigger', function(value) {
                        if(value === true) { 
                            //console.log('trigger',value);
                            //$timeout(function() {
                            element[0].focus();
                            scope.trigger = false;
                            //});
                        }
                    });
                }
            };
        });
        app.filter('range', function() {
            return function(input, total) {
                total = parseInt(total);

                for (var i=1; i<=total; i++) {
                    input.push(i);
                }

                return input;
            };
        });


        app.controller("MainCtrl", MainCtrl);
        function MainCtrl($scope,$rootScope,$mdToast,$document) {
            $rootScope.permission = permission;
            $scope.Navigate = function(Link) {
                location.href = Link;
            }
            $rootScope.showMessage = function (mes) {
                var Position = {
                    bottom: false,
                    top: true,
                    left: false,
                    right: true
                };

                var getToastPosition = function () {
                    return Object.keys(Position)
                      .filter(function (pos) { return Position[pos]; })
                      .join(' ');
                };
                $mdToast.show($mdToast.simple().textContent(mes).position(getToastPosition()).hideDelay(3000));
            }
        }
    </script>
    @RenderSection("Script",false)
    
    
</body>

</html>
